// <auto-generated />
using System;
using AttendanceRecordsSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AttendanceRecordsSystem.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AttendanceRecordsSystemContext))]
    [Migration("20220702131258_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AttendanceRecordsSystem.Domain.Core.Lection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'17', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LectorId")
                        .HasColumnType("integer");

                    b.Property<int>("Mark")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<string>("Tittle")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LectorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Lections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 4,
                            StudentId = 1,
                            Tittle = "Math"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 2,
                            StudentId = 2,
                            Tittle = "Math"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 4,
                            StudentId = 3,
                            Tittle = "Math"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 5,
                            StudentId = 4,
                            Tittle = "Math"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 5,
                            StudentId = 1,
                            Tittle = "Physics"
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 5,
                            StudentId = 2,
                            Tittle = "Physics"
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2022, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 3,
                            StudentId = 3,
                            Tittle = "Physics"
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2022, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 1,
                            Mark = 3,
                            StudentId = 4,
                            Tittle = "Physics"
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2022, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 3,
                            StudentId = 1,
                            Tittle = "Philosophy"
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2022, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 4,
                            StudentId = 2,
                            Tittle = "Philosophy"
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2022, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 4,
                            StudentId = 3,
                            Tittle = "Philosophy"
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2022, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 4,
                            StudentId = 4,
                            Tittle = "Philosophy"
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 4,
                            StudentId = 1,
                            Tittle = "Literature"
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 3,
                            StudentId = 2,
                            Tittle = "Literature"
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 5,
                            StudentId = 3,
                            Tittle = "Literature"
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectorId = 2,
                            Mark = 2,
                            StudentId = 4,
                            Tittle = "Literature"
                        });
                });

            modelBuilder.Entity("AttendanceRecordsSystem.Domain.Core.Lector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Irina",
                            LastName = "Sakharova",
                            Patronymic = "Petrovna"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ivan",
                            LastName = "Lopatin",
                            Patronymic = "Denisovich"
                        });
                });

            modelBuilder.Entity("AttendanceRecordsSystem.Domain.Core.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'5', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Olga",
                            GroupId = 1,
                            LastName = "Laskina"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Tamara",
                            GroupId = 1,
                            LastName = "Komarova"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Vladimir",
                            GroupId = 2,
                            LastName = "Semenov"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Igor",
                            GroupId = 2,
                            LastName = "Onisiev"
                        });
                });

            modelBuilder.Entity("AttendanceRecordsSystem.Domain.Core.StudentsGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StudentsGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupName = "A1"
                        },
                        new
                        {
                            Id = 2,
                            GroupName = "A2"
                        });
                });

            modelBuilder.Entity("AttendanceRecordsSystem.Domain.Core.Lection", b =>
                {
                    b.HasOne("AttendanceRecordsSystem.Domain.Core.Lector", "Lector")
                        .WithMany("Lections")
                        .HasForeignKey("LectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceRecordsSystem.Domain.Core.Student", "Student")
                        .WithMany("AttendedLections")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceRecordsSystem.Domain.Core.Student", b =>
                {
                    b.HasOne("AttendanceRecordsSystem.Domain.Core.StudentsGroup", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
